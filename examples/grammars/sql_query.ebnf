# Grammar for subset of SQL only allowing SELECT queries
# String doesn't support unicode and escape yet

root ::= query

query ::= select ws attributes ws "FROM" ws tables ws ("WHERE" ws condition)? ws ("GROUP BY" ws attribute)? ws ("ORDER BY" ws order)? ws ("LIMIT" ws number)? ws ("OFFSET" ws number)? ws ";"

select ::= "SELECT" | "SELECT" ws "DISTINCT"

attribute_func ::= "COUNT" "(" ("*" | attribute | "DISTINCT" ws attribute) ")" | "AVG" "(" attribute ")" | "MAX" "(" attribute ")" | "MIN" "(" attribute ")"

attribute ::= (string | attribute_func) ("AS" ws string)?

attributes ::= attribute ("," ws attribute)*

table ::= string

join ::= "JOIN" | "LEFT JOIN" | "RIGHT JOIN" | "FULL JOIN" | "INNER JOIN"

join_condition ::= attribute "=" attribute

tables ::= table (ws join ws table ws "ON" ws join_condition)*

condition ::= single_condition | multiple_conditions

single_condition ::= attribute "=" value | attribute "<" value | attribute ">" value | attribute "<=" value | attribute ">=" value | attribute "!=" value | attribute "LIKE" like_value | attribute "IS" "NULL" | attribute "IS" "NOT" "NULL" | attribute "IN" "(" value ("," value)* ")"

multiple_conditions ::= "(" condition "AND" condition ")" | "(" condition "OR" condition ")"

order ::= attribute ("ASC" | "DESC")?

numeric_value ::= number

string_value ::= ("'" string_with_ws "'")

like_value ::= "'" ([a-z] | [A-Z] | "%" | "_")* "'"

value ::= numeric_value | string_value

string_with_ws ::= (string ws)* string

string ::= ([a-z] | [A-Z])+

number ::= ("-"? ([0-9] | [1-9] [0-9]*)) ("." [0-9]+)? ([eE] [-+]? [0-9]+)? ws

ws ::= (" " | "\t" | "\n")
